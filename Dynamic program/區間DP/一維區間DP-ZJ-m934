//============================================================================
// Concept     : 一維區間DP
// Description : m934. 合併成本 from ZeroJuge
//============================================================================
#include <bits/stdc++.h>
using namespace std;
int n;
int a[500];
pair<int,int> dp[500][500];
int main(){
    cin>>n;
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n; i++){
        dp[i][i].first=a[i];
        dp[i][i].second=0;
    }	//初始化，使1區間有值
    for(int h=2; h<=n; h++){	//從2開始Back-up
        for(int i=0; i<n-h+1; i++){
            int temp=INT_MAX;   //cost
            for(int t=i; t<=(i+h-1)-1; t++){
                temp=min(abs(dp[i][t].first-dp[t+1][i+h-1].first)+dp[i][t].second+dp[t+1][i+h-1].second,temp);
            }
            dp[i][i+h-1].first=dp[i][i].first+dp[i+1][i+h-1].first;
            dp[i][i+h-1].second=temp;
        }	//以上是該公式，只是將cost和sum合併成pair
    }
    cout<<dp[0][n-1].second;	//second為cost
    return 0;
}
